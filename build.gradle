plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.openapi.generator' version '7.2.0'
}

group = 'com.smartshopai'
version = '1.0.0'
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    
    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    
    // Lombok + MapStruct integration
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    
    // MongoDB
    implementation 'org.mongodb:mongodb-driver-sync'
    
    // Utilities
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // Caching
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
    
    // Rate Limiting
    implementation 'com.bucket4j:bucket4j-core:8.7.0'
    
    // File Upload
    implementation 'commons-io:commons-io:2.15.1'
    
    // FCM (Firebase Cloud Messaging)
    implementation 'com.google.firebase:firebase-admin:9.2.0'
    
    // Validation
    implementation 'jakarta.validation:jakarta.validation-api'
    
    // Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:mongodb:1.19.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
    
    // Development
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
    useJUnitPlatform()
}

// MapStruct configuration
compileJava {
    options.compilerArgs = [
        '-Amapstruct.defaultComponentModel=spring',
        '-Amapstruct.unmappedTargetPolicy=IGNORE',
        '-Amapstruct.verbose=true',
        '-Amapstruct.defaultInjectionStrategy=constructor',
        '-parameters'
    ]
}

// Ensure MapStruct generates code before Lombok
compileJava.dependsOn(processResources)

// JAR configuration
jar {
    enabled = false
}

bootJar {
    archiveBaseName = 'site-management'
    archiveVersion = '1.0.0'
    archiveClassifier = ''
}
